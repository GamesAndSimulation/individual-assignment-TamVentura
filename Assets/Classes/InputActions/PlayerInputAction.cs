//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Classes/InputActions/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Ground"",
            ""id"": ""0124faee-9c47-4766-9312-9c17960d3fcb"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""d985c0fa-f35e-4b92-a9d4-5f27b17c6c51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""03f7c70d-2dfd-4941-b059-cb54f22362da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""0020b5ac-dccd-4743-b688-753570498e27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""43174cdb-c4a5-4653-ae85-8b22c607410e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""ce77f359-1898-4e6d-a635-63d380430d11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Act"",
                    ""type"": ""Button"",
                    ""id"": ""3f196d94-67c4-4f3a-a052-91f3af7efac1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""88035354-2715-46f4-8b51-e0099cd75375"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ef1837a4-11a4-474a-a727-6a3f449f5ade"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""97d3c09f-7b6b-406f-bae0-988a1a10182d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""611a1b34-0a0f-4be0-a32e-ccfafa4bec77"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ca171257-d5c5-4f55-9c93-afdadb697c75"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d4f85f2e-eb43-40e2-a381-fbde87142adf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64ee8e97-aeb5-435d-920e-bdbabd5f8329"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55f27096-dc27-4068-b21e-ca3ab968a3fa"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b75f1f6e-abe6-4a68-bf69-dfcc6edc09bb"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34f91b85-fa50-4223-87b6-6594860138b6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Act"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Global"",
            ""id"": ""281d5af6-3cb5-4be5-b0e4-38bfa6102065"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""6ca5d99d-d854-45eb-90ec-c8dbf07e87f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpToLevel1"",
                    ""type"": ""Button"",
                    ""id"": ""54a03e28-7a6d-4088-b349-51790c3b8e44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpToLevel2"",
                    ""type"": ""Button"",
                    ""id"": ""d5d1ed35-52e5-49cd-b91d-8e42cccc914e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JumpToLevel3"",
                    ""type"": ""Button"",
                    ""id"": ""e420dc00-7d51-483d-89b7-7983c23a5372"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f6f36e7b-de91-4de6-be94-7a67cdf1bfdc"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69ad22d1-a880-4fe4-a4be-ee84faa4e522"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpToLevel1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42f1092b-69cb-471e-a64c-bf8558cc8aa1"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpToLevel2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a68a45c-d893-4c67-bb9b-1581b0310b96"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JumpToLevel3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""World"",
            ""id"": ""7dc36365-7211-46e7-8c24-9bd544037c6b"",
            ""actions"": [
                {
                    ""name"": ""CameraEnter"",
                    ""type"": ""Button"",
                    ""id"": ""84eedb26-0554-45e6-a5e1-6b304d3ad1fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraExit"",
                    ""type"": ""Button"",
                    ""id"": ""0db8709e-b29f-4805-8737-f147c7f522d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""24cc30e6-8741-495f-865b-39cddde59517"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraEnter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f42bd6e-219c-42a7-ae1e-dace260bb6c3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraExit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ground
        m_Ground = asset.FindActionMap("Ground", throwIfNotFound: true);
        m_Ground_Walk = m_Ground.FindAction("Walk", throwIfNotFound: true);
        m_Ground_Jump = m_Ground.FindAction("Jump", throwIfNotFound: true);
        m_Ground_Camera = m_Ground.FindAction("Camera", throwIfNotFound: true);
        m_Ground_Grab = m_Ground.FindAction("Grab", throwIfNotFound: true);
        m_Ground_Throw = m_Ground.FindAction("Throw", throwIfNotFound: true);
        m_Ground_Act = m_Ground.FindAction("Act", throwIfNotFound: true);
        // Global
        m_Global = asset.FindActionMap("Global", throwIfNotFound: true);
        m_Global_Pause = m_Global.FindAction("Pause", throwIfNotFound: true);
        m_Global_JumpToLevel1 = m_Global.FindAction("JumpToLevel1", throwIfNotFound: true);
        m_Global_JumpToLevel2 = m_Global.FindAction("JumpToLevel2", throwIfNotFound: true);
        m_Global_JumpToLevel3 = m_Global.FindAction("JumpToLevel3", throwIfNotFound: true);
        // World
        m_World = asset.FindActionMap("World", throwIfNotFound: true);
        m_World_CameraEnter = m_World.FindAction("CameraEnter", throwIfNotFound: true);
        m_World_CameraExit = m_World.FindAction("CameraExit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ground
    private readonly InputActionMap m_Ground;
    private IGroundActions m_GroundActionsCallbackInterface;
    private readonly InputAction m_Ground_Walk;
    private readonly InputAction m_Ground_Jump;
    private readonly InputAction m_Ground_Camera;
    private readonly InputAction m_Ground_Grab;
    private readonly InputAction m_Ground_Throw;
    private readonly InputAction m_Ground_Act;
    public struct GroundActions
    {
        private @PlayerInputAction m_Wrapper;
        public GroundActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_Ground_Walk;
        public InputAction @Jump => m_Wrapper.m_Ground_Jump;
        public InputAction @Camera => m_Wrapper.m_Ground_Camera;
        public InputAction @Grab => m_Wrapper.m_Ground_Grab;
        public InputAction @Throw => m_Wrapper.m_Ground_Throw;
        public InputAction @Act => m_Wrapper.m_Ground_Act;
        public InputActionMap Get() { return m_Wrapper.m_Ground; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundActions set) { return set.Get(); }
        public void SetCallbacks(IGroundActions instance)
        {
            if (m_Wrapper.m_GroundActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnWalk;
                @Jump.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Camera.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnCamera;
                @Grab.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnGrab;
                @Throw.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnThrow;
                @Throw.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnThrow;
                @Throw.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnThrow;
                @Act.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnAct;
                @Act.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnAct;
                @Act.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnAct;
            }
            m_Wrapper.m_GroundActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @Throw.started += instance.OnThrow;
                @Throw.performed += instance.OnThrow;
                @Throw.canceled += instance.OnThrow;
                @Act.started += instance.OnAct;
                @Act.performed += instance.OnAct;
                @Act.canceled += instance.OnAct;
            }
        }
    }
    public GroundActions @Ground => new GroundActions(this);

    // Global
    private readonly InputActionMap m_Global;
    private IGlobalActions m_GlobalActionsCallbackInterface;
    private readonly InputAction m_Global_Pause;
    private readonly InputAction m_Global_JumpToLevel1;
    private readonly InputAction m_Global_JumpToLevel2;
    private readonly InputAction m_Global_JumpToLevel3;
    public struct GlobalActions
    {
        private @PlayerInputAction m_Wrapper;
        public GlobalActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_Global_Pause;
        public InputAction @JumpToLevel1 => m_Wrapper.m_Global_JumpToLevel1;
        public InputAction @JumpToLevel2 => m_Wrapper.m_Global_JumpToLevel2;
        public InputAction @JumpToLevel3 => m_Wrapper.m_Global_JumpToLevel3;
        public InputActionMap Get() { return m_Wrapper.m_Global; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GlobalActions set) { return set.Get(); }
        public void SetCallbacks(IGlobalActions instance)
        {
            if (m_Wrapper.m_GlobalActionsCallbackInterface != null)
            {
                @Pause.started -= m_Wrapper.m_GlobalActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GlobalActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GlobalActionsCallbackInterface.OnPause;
                @JumpToLevel1.started -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel1;
                @JumpToLevel1.performed -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel1;
                @JumpToLevel1.canceled -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel1;
                @JumpToLevel2.started -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel2;
                @JumpToLevel2.performed -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel2;
                @JumpToLevel2.canceled -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel2;
                @JumpToLevel3.started -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel3;
                @JumpToLevel3.performed -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel3;
                @JumpToLevel3.canceled -= m_Wrapper.m_GlobalActionsCallbackInterface.OnJumpToLevel3;
            }
            m_Wrapper.m_GlobalActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @JumpToLevel1.started += instance.OnJumpToLevel1;
                @JumpToLevel1.performed += instance.OnJumpToLevel1;
                @JumpToLevel1.canceled += instance.OnJumpToLevel1;
                @JumpToLevel2.started += instance.OnJumpToLevel2;
                @JumpToLevel2.performed += instance.OnJumpToLevel2;
                @JumpToLevel2.canceled += instance.OnJumpToLevel2;
                @JumpToLevel3.started += instance.OnJumpToLevel3;
                @JumpToLevel3.performed += instance.OnJumpToLevel3;
                @JumpToLevel3.canceled += instance.OnJumpToLevel3;
            }
        }
    }
    public GlobalActions @Global => new GlobalActions(this);

    // World
    private readonly InputActionMap m_World;
    private IWorldActions m_WorldActionsCallbackInterface;
    private readonly InputAction m_World_CameraEnter;
    private readonly InputAction m_World_CameraExit;
    public struct WorldActions
    {
        private @PlayerInputAction m_Wrapper;
        public WorldActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraEnter => m_Wrapper.m_World_CameraEnter;
        public InputAction @CameraExit => m_Wrapper.m_World_CameraExit;
        public InputActionMap Get() { return m_Wrapper.m_World; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WorldActions set) { return set.Get(); }
        public void SetCallbacks(IWorldActions instance)
        {
            if (m_Wrapper.m_WorldActionsCallbackInterface != null)
            {
                @CameraEnter.started -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraEnter;
                @CameraEnter.performed -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraEnter;
                @CameraEnter.canceled -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraEnter;
                @CameraExit.started -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraExit;
                @CameraExit.performed -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraExit;
                @CameraExit.canceled -= m_Wrapper.m_WorldActionsCallbackInterface.OnCameraExit;
            }
            m_Wrapper.m_WorldActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraEnter.started += instance.OnCameraEnter;
                @CameraEnter.performed += instance.OnCameraEnter;
                @CameraEnter.canceled += instance.OnCameraEnter;
                @CameraExit.started += instance.OnCameraExit;
                @CameraExit.performed += instance.OnCameraExit;
                @CameraExit.canceled += instance.OnCameraExit;
            }
        }
    }
    public WorldActions @World => new WorldActions(this);
    public interface IGroundActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnAct(InputAction.CallbackContext context);
    }
    public interface IGlobalActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnJumpToLevel1(InputAction.CallbackContext context);
        void OnJumpToLevel2(InputAction.CallbackContext context);
        void OnJumpToLevel3(InputAction.CallbackContext context);
    }
    public interface IWorldActions
    {
        void OnCameraEnter(InputAction.CallbackContext context);
        void OnCameraExit(InputAction.CallbackContext context);
    }
}
